/* 修复input number字段的z-index问题 - 限定到主面板作用域 */

/* 主面板（#app）中的input number字段应该有较低的z-index */
#app input[type="number"] {
    position: relative;
    z-index: 1 !important;
}

/* 第二入口（#pixeladjustment）input不受影响，使用默认样式 */
#pixeladjustment input[type="number"] {
    position: relative;
    z-index: auto;
}

/* 当次级面板打开时，主面板的input应该被遮盖 */
.pattern-picker,
.color-settings-panel,
.gradient-picker,
.stroke-setting {
    z-index: 9999 !important;
}

/* 授权对话框打开时，彻底隐藏主面板内所有数字输入，避免穿透和抢层级 */
body.license-dialog-open #app .slider-container input[type="number"],
body.license-dialog-open #app .expand-content input[type="number"],
body.license-dialog-open #app .adjustment-slider-container input[type="number"],
body.license-dialog-open #app .adjustment-number-input {
    visibility: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
}

/* 当任何次级面板打开时，隐藏主面板中的所有input number字段 */
body.secondary-panel-open #app .slider-container input[type="number"],
body.secondary-panel-open #app .expand-content input[type="number"],
body.secondary-panel-open #app .adjustment-slider-container input[type="number"],
body.secondary-panel-open #app .adjustment-number-input {
    visibility: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
}

/* 确保次级面板内的input始终可见 */
.pattern-picker input[type="number"],
.color-settings-panel input[type="number"],
.gradient-picker input[type="number"],
.stroke-setting input[type="number"] {
    visibility: visible !important;
    opacity: 1 !important;
    pointer-events: auto !important;
}

/* 确保主面板折叠状态下的input不显示 */
#app .expand-content:not(.expanded) input[type="number"] {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
}

/* 主面板展开状态下的input正常显示，但当次级面板打开时仍要隐藏 */
#app .expand-content.expanded input[type="number"] {
    visibility: visible;
    opacity: 1;
    pointer-events: auto;
    transition: opacity 0.3s ease;
}

/* 当次级面板打开时，即使是展开状态的选区选项input也要隐藏 */
body.secondary-panel-open #app .expand-content.expanded input[type="number"] {
    visibility: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
}